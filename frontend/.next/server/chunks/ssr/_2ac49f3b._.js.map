{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/cabozzz/dev/RestaurantManager/frontend/lib/api.ts"],"sourcesContent":["import { Table, CreateTableData, UpdateTableData, TempTable, CreateReservationData, ReservationResponse } from './types';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nclass ApiError extends Error {\n  constructor(public status: number, message: string) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nasync function fetchApi<T>(endpoint: string, options?: RequestInit): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`;\n  \n  const response = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options?.headers,\n    },\n    ...options,\n  });\n\n  if (!response.ok) {\n    throw new ApiError(response.status, `API Error: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\nexport const tableApi = {\n  // Get all tables\n  getTables: (): Promise<Table[]> => {\n    return fetchApi<Table[]>('/tables');\n  },\n\n  // Create a single table\n  createTable: (data: CreateTableData): Promise<Table> => {\n    return fetchApi<Table>('/tables', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // Create multiple tables (for onboarding)\n  createTablesBulk: (tables: TempTable[]): Promise<Table[]> => {\n    return fetchApi<Table[]>('/tables/bulk', {\n      method: 'POST',\n      body: JSON.stringify({ tables }),\n    });\n  },\n\n  // Update a table\n  updateTable: (id: number, data: UpdateTableData): Promise<Table> => {\n    return fetchApi<Table>(`/tables/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // Delete a table\n  deleteTable: (id: number): Promise<void> => {\n    return fetchApi<void>(`/tables/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  // Check onboarding status\n  getOnboardingStatus: (): Promise<{ completed: boolean }> => {\n    return fetchApi<{ completed: boolean }>('/onboarding/status');\n  },\n\n  // Mark onboarding as complete\n  completeOnboarding: (): Promise<void> => {\n    return fetchApi<void>('/onboarding/complete', {\n      method: 'POST',\n    });\n  },\n};\n\nexport const reservationApi = {\n  // Create a new reservation\n  createReservation: (data: CreateReservationData): Promise<ReservationResponse> => {\n    return fetchApi<ReservationResponse>('/reservations', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n};\n\nexport { ApiError };\n"],"names":[],"mappings":";;;;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAExD,MAAM,iBAAiB;;IACrB,YAAY,AAAO,MAAc,EAAE,OAAe,CAAE;QAClD,KAAK,CAAC,eADW,SAAA;QAEjB,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA,eAAe,SAAY,QAAgB,EAAE,OAAqB;IAChE,MAAM,MAAM,GAAG,eAAe,UAAU;IAExC,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,SAAS;YACP,gBAAgB;YAChB,GAAG,SAAS,OAAO;QACrB;QACA,GAAG,OAAO;IACZ;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,SAAS,SAAS,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,UAAU,EAAE;IACzE;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,WAAW;IACtB,iBAAiB;IACjB,WAAW;QACT,OAAO,SAAkB;IAC3B;IAEA,wBAAwB;IACxB,aAAa,CAAC;QACZ,OAAO,SAAgB,WAAW;YAChC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,0CAA0C;IAC1C,kBAAkB,CAAC;QACjB,OAAO,SAAkB,gBAAgB;YACvC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAO;QAChC;IACF;IAEA,iBAAiB;IACjB,aAAa,CAAC,IAAY;QACxB,OAAO,SAAgB,CAAC,QAAQ,EAAE,IAAI,EAAE;YACtC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,iBAAiB;IACjB,aAAa,CAAC;QACZ,OAAO,SAAe,CAAC,QAAQ,EAAE,IAAI,EAAE;YACrC,QAAQ;QACV;IACF;IAEA,0BAA0B;IAC1B,qBAAqB;QACnB,OAAO,SAAiC;IAC1C;IAEA,8BAA8B;IAC9B,oBAAoB;QAClB,OAAO,SAAe,wBAAwB;YAC5C,QAAQ;QACV;IACF;AACF;AAEO,MAAM,iBAAiB;IAC5B,2BAA2B;IAC3B,mBAAmB,CAAC;QAClB,OAAO,SAA8B,iBAAiB;YACpD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/cabozzz/dev/RestaurantManager/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/cabozzz/dev/RestaurantManager/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}}]
}